---
import { sanityClient } from "sanity:client";
import groq from "groq";
import type { Topic, Post } from "../../groq";
import BaseLayout from "../../layouts/BaseLayout.astro";
import PostGrid from "../../components/PostGrid.astro";
import PortableText from "../../components/PortableText.astro";

export async function getStaticPaths() {
    const topicPageQuery = groq`
		*[_type == "topic"]{
            ...,
            "posts": *[_type == "post" && references(^._id)] | order(datePublished desc)
        }
	`;
    const topics = await sanityClient.fetch<TopicPageQueryResult[]>(topicPageQuery);

    return topics.map(topic => ({
        params: { slug: topic.slug.current },
        props: topic
    }));
}

interface TopicPageQueryResult extends Topic {
    posts: Post[]
}
type Props = TopicPageQueryResult;
const topic = Astro.props;
---

<BaseLayout title={ topic.name }>
    <h1>{ topic.name }</h1>
    <PortableText value={ topic.content } />

    <h2>Posts</h2>
    <PostGrid posts={ topic.posts } />
</BaseLayout>