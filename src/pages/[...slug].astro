---
import { sanityClient } from "sanity:client";
import groq from "groq";
import type { Post, Topic } from "../groq";
import { generateDatedPostSlug } from "../util";
import BaseLayout from "../layouts/BaseLayout.astro";
import PortableText from "../components/PortableText.astro";
import FormattedDate from "../components/FormattedDate.astro";

export async function getStaticPaths() {
	const postPageQuery = groq`
		*[_type == "post"]{
			...,
			'topic': topic->
		}
	`;
    const posts = await sanityClient.fetch<PostPageQueryResult[]>(postPageQuery);

	return posts.map(post => ({
		params: { slug: generateDatedPostSlug(post.datePublished, post.slug.current) },
		props: post
	}));
}

interface PostPageQueryResult extends Omit<Post, 'topic'> {
	topic: Topic
};
type Props = PostPageQueryResult;
const post = Astro.props;
---

<BaseLayout
	title={ post.title }
	description={ post?.description }
>
	<h1>{ post.title }</h1>
	<p>
		<FormattedDate date={ new Date(post.datePublished) } />
		{` - `}
		<a href=`/topics/${ post.topic.slug.current }`>
			{ post.topic.name }
		</a>
	</p>
	<PortableText value={post.content} />
</BaseLayout>