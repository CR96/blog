---
export const prerender =  false;

import { sanityClient } from 'sanity:client';
import { previewPostPageQuery } from '@studio/sanity-queries';
import type { PreviewPostPageQueryResult } from '@studio/sanity-typegen';
import PostPage from '@pages/[...slug]/index.astro';
import PreviewOverlay from '@components/PreviewOverlay.astro';
import { validatePreviewUrl } from '@sanity/preview-url-secret';
import { fakeSanityPreviewUrl } from '@/util';

const token = Astro.url.searchParams.get('token');
if (!token) {
    return new Response("HTTP 400", { status: 400 });
}

const { isValid } = await validatePreviewUrl(
    sanityClient,
    fakeSanityPreviewUrl(Astro.url.origin, token)
);
if (!isValid) {
    return new Response("HTTP 401", { status: 401 });
}

const { slug } = Astro.params;

const slugComponents = slug?.split('/');
if (slugComponents?.length != 4) {
    return new Response("HTTP 400", { status: 400 });
}

const datePublished = slugComponents.slice(0, 3).join('-');
const slugRoot = slugComponents.at(-1);

const post = await sanityClient.fetch<PreviewPostPageQueryResult>(previewPostPageQuery, {
    datePublished,
    slug: slugRoot
}, {
    perspective: 'previewDrafts'
});

if (!post) {
    return new Response("HTTP 404", { status: 404 });
}
---

<PostPage { ...post }>
    <PreviewOverlay />
</PostPage>