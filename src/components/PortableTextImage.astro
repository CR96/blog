---
import { sanityClient } from 'sanity:client';
import groq from 'groq';
import imageUrlBuilder from '@sanity/image-url';
import CaptionedElement from './CaptionedElement.astro';
import type { Post, SanityImageAsset } from '../groq';

type NodeProps = Extract<Post['content'][number], { '_type': 'image' }>;

const { asset: assetReference, alt = "", caption } : NodeProps = Astro.props.node;

const assetReferenceQuery = groq`
    *[_type == "sanity.imageAsset" && _id == $id][0]
`;

const asset = await sanityClient.fetch<SanityImageAsset>(assetReferenceQuery, {
    id: assetReference?._ref
});

const builder = imageUrlBuilder(sanityClient);
const src = builder.image(asset).format('webp').url();

const WrapperElement = caption ? CaptionedElement : Fragment;
---

<WrapperElement { ...caption && { caption } }>
    <img src={ src } alt={ alt } />
</WrapperElement>